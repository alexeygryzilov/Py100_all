""" Этот модуль cоздаёт и выводит на печать поле для игры -
квадратное поле N на N клеток, каждая клетка пердставляет собой квадрат с
символом внутри. Символ - это или порядковый номер вкадрата на иговом поле
или 'X' либо 'O' если соответствующий игрок сделал свой ход
для создания квадратов используются символы unicode:
print('\u250c \u2500 \u2510 \u2502 \u2514 \u2518') выведет на печать  ┌ ─ ┐ │ └ ┘ """

a = ('\u250c', '\u2500' * 11, '\u2510')  # верхняя часть квадрата  print(*a) :   ┌ ─────────── ┐
b = ('\u2502', " " * 11, '\u2502')  # промежуточная часть квадрата  print(*b) :  │             │
e = ('\u2514', '\u2500' * 11, '\u2518')  # нижняя часть квадрата print(*e) :     └ ─────────── ┘


def print_top(n: int) -> None:
    """функция выводит на печать 2 строки: n верхних частей квадрата, n промежуточных частей
    print_top(3) : ┌───────────┐┌───────────┐┌───────────┐
                   │           ││           ││           │ """
    f = [a * n, b * n]
    for i in f:
        print(*i, sep='')


def print_middle(symbols: list) -> None:
    """функция выводит на печать 1 строку: средние части квадратов с симовалами из списка 'symbols'
    print_middle([1, 2, 3]) : │     1     ││     2     ││     3     │"""
    c = [('\u2502', f'{sign:^11}', '\u2502') for sign in symbols]
    for i in c:
        print(*i, sep='', end='')
    print('')


def print_bottom(n: int) -> None:
    """функция выводит на печать 2 строки: n промежуточных частей квадрата, n нижних частей
        print_bottom(3) : │           ││           ││           │
                          └───────────┘└───────────┘└───────────┘  """
    f = [b * n, e * n]
    for i in f:
        print(*i, sep='')


def print_row(n: int, symbols: list) -> None:
    """функция выводит на печать 1 строку: ряд из n квадратов с симовалами из списка 'symbols'
    print_row(3, [1, 2, 3]) :  ┌───────────┐┌───────────┐┌───────────┐
                               │           ││           ││           │
                               │     1     ││     2     ││     3     │
                               │           ││           ││           │
                               └───────────┘└───────────┘└───────────┘"""
    print_top(n)
    print_middle(symbols)
    print_bottom(n)


def print_paying_field(n: int, symbols: list) -> None:
    """фукция выводит на печать игровое поле n x n : n строк из n квадратов
    с символами из списка 'symbols' внутри каждого квадрата
    print_paying_field(2, [1, 2, 3, 4]) :
┌───────────┐┌───────────┐
│           ││           │
│     1     ││     2     │
│           ││           │
└───────────┘└───────────┘
┌───────────┐┌───────────┐
│           ││           │
│     3     ││     4     │
│           ││           │
└───────────┘└───────────┘"""
    for i in range(0, n * n, n):
        slice = symbols[i:i + n]
        print_row(n, slice)


if __name__ == '__main__':
    n = 6
    symbols = [i for i in range(1, n * n + 1)]
    print_paying_field(n, symbols)
